user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;
# Define the events block
events {
    worker_connections 768;  # Adjust this based on your needs
}

# Define the HTTP context
http {
    include mime.types;
    default_type application/octet-stream;

    # Log settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

      # Limit request zone definitions
    limit_req_zone $binary_remote_addr zone=frontend_zone:10m rate=30r/s;  # 30 requests per second for the frontend
    limit_req_zone $binary_remote_addr zone=backend_zone:10m rate=20r/s;   # 20 requests per second for the backend

        gzip on;


        # include /etc/nginx/conf.d/*.conf;
        # include /etc/nginx/sites-enabled/*;
    # Define the server block
    server {
        listen 80;
        server_name localhost;

        # root /usr/share/nginx/html;
        root /home/ubuntu/CodeShare/frontend/build;
        index index.html;

        location / {
            try_files $uri /index.html;
        }

        location /api/ {
            # limit_req zone=backend_zone burst=5 nodelay;  # Apply rate limiting for the backend
            proxy_pass http://localhost:8080;  # Assuming your backend is running on port 8080
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /socket/ {
            proxy_pass http://localhost:8081/socket/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
