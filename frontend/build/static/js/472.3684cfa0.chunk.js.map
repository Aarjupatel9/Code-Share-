{"version":3,"file":"static/js/472.3684cfa0.chunk.js","mappings":"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","sources":["gamePlugin/games/9Players/GameBoard.jsx","gamePlugin/games/9Players/Player.jsx","gamePlugin/games/9Players/assets/svgs.jsx","gamePlugin/games/9Players/constants/constants.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Player from './Player'\r\nimport { initialPlayerPositions, initialState, edges, pattern } from './constants/constants.jsx'\r\n\r\nconst GameBoard = ({ players, setPlayers }) => {\r\n  const [playerState, setPlayerState] = useState(initialState)\r\n  const [playerPositions, setPlayerPositions] = useState(initialPlayerPositions)\r\n  const [gamePhase, setGamePhase] = useState('initialize')\r\n  const [isAdvantage, setIsAdvantage] = useState(false)\r\n  const [lastMove, setLastMove] = useState(-1)\r\n  const [isPlayerTouchedForMove, setIsPlayerTouchedForMove] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (players[0].placedPlayer === 9 && players[1].placedPlayer === 9) {\r\n      setGamePhase('start')\r\n    }\r\n    if (players[0].retirePlayer === 9 || players[1].retirePlayer === 9) {\r\n      setGamePhase('end')\r\n    }\r\n  }, [players])\r\n\r\n  useEffect(() => {\r\n    if (isAdvantage) {\r\n      if (gamePhase === 'initialize') {\r\n      }\r\n      populatePosiblePlayerRemove(false)\r\n      setSecondPlayerTurn()\r\n    }\r\n    console.log('in use Effect : ', isAdvantage)\r\n  }, [isAdvantage])\r\n\r\n  const getHorizontalRow = (configuration, rowIndex) => {\r\n    var margin = ''\r\n    if (rowIndex === 3) {\r\n      margin = (4 * 100) / 6 + '%'\r\n      return (\r\n        <div key={`h1x-${rowIndex}`}>\r\n          <div\r\n            key={`h1-${rowIndex}`}\r\n            className=\"absolute left-0 h-px bg-black\"\r\n            style={{\r\n              top: `${(rowIndex * 100) / 6}%`,\r\n              width: `${configuration[0]}%`,\r\n              marginLeft: '0px',\r\n            }}\r\n          />\r\n          <div\r\n            key={`h2-${rowIndex}-1`}\r\n            className=\"absolute left-0 h-px bg-black\"\r\n            style={{\r\n              top: `${(rowIndex * 100) / 6}%`,\r\n              width: `${configuration[0]}%`,\r\n              marginLeft: margin,\r\n            }}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (rowIndex < 3) {\r\n      margin = (rowIndex * 100) / 6 + '%'\r\n    } else {\r\n      margin = ((6 - rowIndex) * 100) / 6 + '%'\r\n    }\r\n\r\n    return (\r\n      <div\r\n        key={`h-${rowIndex}`}\r\n        className=\"absolute left-0 h-px bg-black\"\r\n        style={{\r\n          top: `${(rowIndex * 100) / 6}%`,\r\n          width: `${configuration[0]}%`,\r\n          marginLeft: margin,\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  const getVerticalRow = (configuration, rowIndex) => {\r\n    var margin = ''\r\n    if (rowIndex === 3) {\r\n      margin = (4 * 100) / 6 + '%'\r\n      return (\r\n        <div key={`v1x-${rowIndex}`}>\r\n          <div\r\n            key={`v1-${rowIndex}`}\r\n            className=\"absolute top-0 w-px bg-black\"\r\n            style={{\r\n              left: `${(rowIndex * 100) / 6}%`,\r\n              height: `${configuration[0]}%`,\r\n              marginTop: '0px',\r\n            }}\r\n          />\r\n          <div\r\n            key={`v2-${rowIndex}-1`}\r\n            className=\"absolute top-0 w-px bg-black\"\r\n            style={{\r\n              left: `${(rowIndex * 100) / 6}%`,\r\n              height: `${configuration[0]}%`,\r\n              marginTop: margin,\r\n            }}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (rowIndex < 3) {\r\n      margin = (rowIndex * 100) / 6 + '%'\r\n    } else {\r\n      margin = ((6 - rowIndex) * 100) / 6 + '%'\r\n    }\r\n\r\n    return (\r\n      <div\r\n        key={`v-${rowIndex}`}\r\n        className=\"absolute top-0 w-px bg-black\"\r\n        style={{\r\n          left: `${(rowIndex * 100) / 6}%`,\r\n          height: `${configuration[0]}%`,\r\n          marginTop: margin,\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  // New function to render circles at intersections\r\n  const getCirclesAtIntersections = () => {\r\n    return playerState.map((data, index) => {\r\n      var color = ''\r\n      switch (data.player) {\r\n        case 0: {\r\n          color = 'bg-slate-300'\r\n          break\r\n        }\r\n        case 1:\r\n        case 2: {\r\n          color = 'bg-transparent'\r\n          break\r\n        }\r\n        case 3: {\r\n          color = 'bg-green-800'\r\n          break\r\n        }\r\n        case 4: {\r\n          color = 'bg-red-600'\r\n          break\r\n        }\r\n        default: {\r\n          color = 'bg-black'\r\n        }\r\n      }\r\n\r\n      if (data.isRemovable && data.player !== 0) {\r\n        color = 'bg-red-600'\r\n      }\r\n      if (data.isMovable) {\r\n        color = 'bg-green-800'\r\n      }\r\n\r\n      return (\r\n        <div\r\n          key={`circle-${data.row}-${data.col}-${index}`}\r\n          className={`absolute sm:w-[16px] md:w-[20px] sm:h-[16px] md:h-[20px] rounded-full cursor-pointer ${color} \r\n                                transition-all duration-1000 ease-in-out`} // Transition on all properties\r\n          style={{\r\n            top: `${(data.row * 100) / 6}%`,\r\n            left: `${(data.col * 100) / 6}%`,\r\n            transform: 'translate(-50%, -50%)',\r\n            zIndex: 100,\r\n          }}\r\n          onClick={() => {\r\n            handlePlayerClick(data, index)\r\n          }}\r\n        ></div>\r\n      )\r\n    })\r\n  }\r\n  const getPlayersCircles = () => {\r\n    return playerPositions.map((circle, index) => {\r\n      var color = players[index > 8 ? 1 : 0].color\r\n      if (!circle.isRemoved) {\r\n        return (\r\n          <div\r\n            key={`playerCircle-${index}`}\r\n            className={`playersCircle sm:w-[16px] md:w-[20px] sm:h-[16px] md:h-[20px] absolute rounded-full cursor-pointer ${color} \r\n                                    transition-all duration-1000 ease-in-out  ${circle.isBind && playerState[circle.index].isSelectedForMove ? 'rounded shadow-cyan-500/50 shadow-xl animate-bounce' : 'shadow-sm'} `} // Transition for all properties\r\n            style={{\r\n              top: `${parseFloat(circle.top)}%`, // Ensure top is percentage\r\n              left: `${parseFloat(circle.left)}%`, // Ensure left is percentage\r\n              transform: 'translate(-50%, -50%)',\r\n              zIndex: 99,\r\n            }}\r\n          ></div>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  const populatePosibleMoves = (data, index) => {\r\n    //[0, 0, 0]\r\n    if (data.player === 0 || data.player === 3) {\r\n      return //returning for empty\r\n    }\r\n    if (data.isSelectedForMove) {\r\n      clearPosibleMoves()\r\n      return\r\n    }\r\n    var points_to_highlight = edges[index].filter((p) => {\r\n      return playerState[p].player === 0\r\n    })\r\n    if (points_to_highlight && points_to_highlight.length > 0) {\r\n      //only populate if player is not blocked\r\n      setIsPlayerTouchedForMove(true)\r\n      setPlayerState((old) => {\r\n        old = structuredClone(old)\r\n        for (var i = 0; i < points_to_highlight.length; i++) {\r\n          old[points_to_highlight[i]].isMovable = true\r\n        }\r\n        old[index].isSelectedForMove = true\r\n        return old\r\n      })\r\n    } else {\r\n      console.log('Player is blocked')\r\n      //have to decide how to display it to user\r\n    }\r\n  }\r\n  const clearPosibleMoves = () => {\r\n    setIsPlayerTouchedForMove(false)\r\n    setPlayerState((old) => {\r\n      old = old.map((p) => {\r\n        if (p.isMovable) {\r\n          p.isMovable = false\r\n        }\r\n        p.isSelectedForMove = false\r\n        return p\r\n      })\r\n      return old\r\n    })\r\n  }\r\n\r\n  const populatePosiblePlayerRemove = (isRevert) => {\r\n    var activePlayer = players[0].isActive ? 1 : 2 // 1 for player1, 2 for player2\r\n    console.log('populatePosiblePlayerRemove : ', isRevert, activePlayer)\r\n    if (isRevert) {\r\n      setPlayerState((old) => {\r\n        return old.map((o) => {\r\n          o.isRemovable = false\r\n          return o\r\n        })\r\n      })\r\n      return\r\n    }\r\n    // Function to find if a player is part of a triplet\r\n    const findAllTriplets = (playerState) => {\r\n      let triplets = []\r\n\r\n      // Find row triplets\r\n      for (let row = 0; row <= 6; row++) {\r\n        const rowElements = playerState.filter((c) => c.row === row) // Get all elements in the same row for active player\r\n        for (let i = 0; i <= rowElements.length - 3; i += 3) {\r\n          if (rowElements[i].player === activePlayer && rowElements[i].player === rowElements[i + 1].player && rowElements[i].player === rowElements[i + 2].player) {\r\n            console.log('triplets found for row ', rowElements)\r\n            triplets.push(rowElements[i], rowElements[i + 1], rowElements[i + 2])\r\n          }\r\n        }\r\n      }\r\n\r\n      // Find column triplets\r\n      for (let col = 0; col <= 6; col++) {\r\n        const colElements = playerState.filter((c) => c.col === col) // Get all elements in the same column for active player\r\n        for (let i = 0; i <= colElements.length - 3; i += 3) {\r\n          if (colElements[i].player === activePlayer && colElements[i].player === colElements[i + 1].player && colElements[i].player === colElements[i + 2].player) {\r\n            console.log('triplets found for col ', colElements)\r\n            triplets.push(colElements[i], colElements[i + 1], colElements[i + 2])\r\n          }\r\n        }\r\n      }\r\n\r\n      return triplets\r\n    }\r\n\r\n    // Get all triplets for the active player\r\n    const tripletPlayers = findAllTriplets(playerState)\r\n\r\n    // Get players not part of any triplet\r\n    const playersToRemove = playerState.filter((child) => {\r\n      return child.player === activePlayer && !tripletPlayers.includes(child)\r\n    })\r\n\r\n    console.log('Players that can be removed: ', playersToRemove, tripletPlayers)\r\n\r\n    setPlayerState((old) => {\r\n      old = structuredClone(old)\r\n      playersToRemove.forEach((p) => {\r\n        old[p.index].isRemovable = true\r\n      })\r\n      return old\r\n    })\r\n  }\r\n\r\n  const removeSpecificPlayer = (index) => {\r\n    console.log('removeSpecificPlayer : ', index)\r\n\r\n    setPlayerState((old) => {\r\n      old = structuredClone(old)\r\n      old[index].player = 0\r\n      return old\r\n    })\r\n    setPlayerPositions((old) => {\r\n      old = structuredClone(old)\r\n      for (var counter = 0; counter < 18; counter++) {\r\n        console.log('removeSpecificPlayer setPlayerPositions : ', index, counter)\r\n        if (old[counter].index === index) {\r\n          old[counter].isRemoved = true\r\n        }\r\n      }\r\n      return old\r\n    })\r\n\r\n    setPlayers((old) => {\r\n      old = structuredClone(old)\r\n      for (var i = 0; i < old.length; i++) {\r\n        if (!old[i].isActive) {\r\n          old[i].retirePlayer += 1\r\n        }\r\n      }\r\n      return old\r\n    })\r\n    setIsAdvantage(false)\r\n    populatePosiblePlayerRemove(true)\r\n    setSecondPlayerTurn()\r\n  }\r\n  const handlePlayerChange = (data, index) => {\r\n    var playerIndexToMove = playerState.findIndex((p) => p.isSelectedForMove) // Find the active player to move\r\n    console.log('handlePlayerChange playerIndexToMove ', playerIndexToMove, data, index, playerPositions)\r\n\r\n    if (playerIndexToMove === -1) {\r\n      console.log('handlePlayerChange playerIndexToMove ', playerIndexToMove, 'returning')\r\n      return\r\n    }\r\n    setPlayerState((prevState) => {\r\n      const newState = [...prevState]\r\n      newState[playerIndexToMove].player = 0 // Clear old position\r\n      if (players[0].isActive) {\r\n        newState[index].player = 1 // Set new position\r\n      } else {\r\n        newState[index].player = 2 // Set new position\r\n      }\r\n      return newState\r\n    })\r\n\r\n    setPlayerPositions((old) => {\r\n      old = structuredClone(old)\r\n\r\n      for (var counter = 0; counter < 18; counter++) {\r\n        console.log('handlePlayerChange setPlayerPositions : ', index, counter)\r\n        if (old[counter].index == playerIndexToMove) {\r\n          old[counter].top = `${(data.row * 100) / 6}%`\r\n          old[counter].left = `${(data.col * 100) / 6}%`\r\n        }\r\n      }\r\n      console.log('setPlayerPositions : ', old)\r\n      return old\r\n    })\r\n\r\n    clearPosibleMoves()\r\n    setSecondPlayerTurn()\r\n  }\r\n  const setSecondPlayerTurn = () => {\r\n    setPlayers((old) => {\r\n      old = structuredClone(old)\r\n      old[0].isActive = !old[0].isActive\r\n      old[1].isActive = !old[1].isActive\r\n      return old\r\n    })\r\n  }\r\n\r\n  const handlePlayerClick = (data, index) => {\r\n    console.log('handlePlayerClick index : ', index, data, gamePhase, isAdvantage, isPlayerTouchedForMove)\r\n    if (gamePhase == 'end') {\r\n      return\r\n    }\r\n\r\n    if (isAdvantage) {\r\n      // console.log(\"handlePlayerClick index : \", index, data, gamePhase)\r\n      if (data.isRemovable === true) {\r\n        setLastMove(index)\r\n        removeSpecificPlayer(index)\r\n        return\r\n      }\r\n      return\r\n    }\r\n\r\n    if (isPlayerTouchedForMove && !data.isMovable) {\r\n      return\r\n    }\r\n\r\n    if (gamePhase === 'initialize') {\r\n      console.log('inside initialize')\r\n\r\n      if (data.player > 0) return\r\n\r\n      setLastMove(index)\r\n      var nextToInsert = players[0].isActive ? 0 : 9\r\n      setPlayerPositions((old) => {\r\n        old = structuredClone(old)\r\n        console.log('setPlayerPositions nextToInsert : ', nextToInsert)\r\n        while (old[nextToInsert].isBind) {\r\n          nextToInsert++\r\n        }\r\n        old[nextToInsert].index = index\r\n        old[nextToInsert].isBind = true\r\n        old[nextToInsert].top = `${(data.row * 100) / 6}%`\r\n        old[nextToInsert].left = `${(data.col * 100) / 6}%`\r\n        console.log('setPlayerPositions : ', old)\r\n        return old\r\n      })\r\n\r\n      setPlayerState((old) => {\r\n        var activePlayer = players[0].isActive ? 1 : 2\r\n        old = structuredClone(old)\r\n        old[index].player = activePlayer\r\n        return old\r\n      })\r\n      setPlayers((old) => {\r\n        var activePlayer = players[0].isActive ? 0 : 1\r\n        old = structuredClone(old)\r\n        old[activePlayer].placedPlayer += 1\r\n        return old\r\n      })\r\n      setSecondPlayerTurn()\r\n    } else if (gamePhase === 'start') {\r\n      console.log('inside start')\r\n      if (data.isMovable) {\r\n        console.log('handlePlahyerClick start movable ', index, data)\r\n        setLastMove(index)\r\n        handlePlayerChange(data, index)\r\n      } else if ((data.player === 1 || data.player === 2) && players[data.player - 1].isActive) {\r\n        console.log('handlePlahyerClick start touch ', index, data)\r\n        populatePosibleMoves(data, index)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    var isAdvantage = checkPlayerAdvantage()\r\n    setIsAdvantage(isAdvantage)\r\n    console.log('isAdvantage : ', isAdvantage)\r\n  }, [playerState])\r\n\r\n  useEffect(() => {\r\n    // console.log(\"players : \", players);\r\n  }, [players])\r\n\r\n  const checkPlayerAdvantage = () => {\r\n    for (let row = 0; row <= 6; row++) {\r\n      const rowElements = playerState.filter((child) => child.row === row) // Get all elements in the same row\r\n      for (let i = 0; i <= rowElements.length - 3; i += 3) {\r\n        // console.log(\"colElements : \",i,rowElements);\r\n        if (rowElements[i].player !== 0 && rowElements[i].player === rowElements[i + 1].player && rowElements[i].player === rowElements[i + 2].player) {\r\n          if ([rowElements[i].index, rowElements[i + 1].index, rowElements[i + 2].index].includes(lastMove)) {\r\n            return true\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (let col = 0; col <= 6; col++) {\r\n      const colElements = playerState.filter((child) => child.col === col) // Get all elements in the same column\r\n      for (let i = 0; i <= colElements.length - 3; i += 3) {\r\n        // console.log(\"colElements : \",i,colElements);\r\n        if (colElements[i].player !== 0 && colElements[i].player === colElements[i + 1].player && colElements[i].player === colElements[i + 2].player) {\r\n          if ([colElements[i].index, colElements[i + 1].index, colElements[i + 2].index].includes(lastMove)) {\r\n            return true\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('playerState changed : ', playerState)\r\n  }, [playerState])\r\n  useEffect(() => {\r\n    console.log('playerPositions changed : ', playerPositions)\r\n  }, [playerPositions])\r\n\r\n  return (\r\n    <div className=\"flex flex-col mx-auto py-2 px-3 jsutify-center\">\r\n      {/* Grid container with relative positioning */}\r\n      <div className=\"relative sm:max-h-[270px] sm:max-w-[270px] sm:min-h-[270px] sm:min-w-[270px]  md:max-h-[600px] md:max-w-[600px] md:min-h-[500px] md:min-w-[500px] mx-auto \">\r\n        {/* Horizontal lines */}\r\n        {pattern.map((conf, rowIndex) => getHorizontalRow(conf, rowIndex))}\r\n\r\n        {/* Vertical lines */}\r\n        {pattern.map((conf, rowIndex) => getVerticalRow(conf, rowIndex))}\r\n\r\n        {/* Circles at intersections */}\r\n        {getCirclesAtIntersections()}\r\n\r\n        {getPlayersCircles()}\r\n\r\n        {gamePhase == 'end' && (\r\n          <div\r\n            key={`win-div-container`}\r\n            className={`absolute rounded cursor-pointer font-bold text-xl bg-green-300 flex flex-col justify-around items-center`}\r\n            style={{\r\n              width: '200px',\r\n              height: '200px',\r\n              top: `50%`,\r\n              left: `50%`,\r\n              transform: 'translate(-50%, -50%)',\r\n            }}\r\n          >\r\n            <div>{players[0].retirePlayer > players[1].retirePlayer ? 'Player 2' : 'Player 1'} Won </div>\r\n            <div>\r\n              <div className=\"px-2 py-1 bg-green-600 rounded\" onClick={() => {}}>\r\n                Restart the Game\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"flex justify-around content-around mt-10\">\r\n        <Player user1={players[0]} user2={players[1]} possition={'left'} />\r\n        <Player user1={players[1]} user2={players[0]} possition={'right'} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameBoard\r\n","import React, { useEffect } from 'react'\r\nimport { UserIcon } from './assets/svgs';\r\n\r\n\r\nexport default function Player(props) {\r\n    const { name, isActive, color, } = props.user1;\r\n    const possition = props.possition;\r\n \r\n    return (\r\n        <div className={`Player flex ${possition == \"right\" ? \"flex-row-reverse\" : \"flex-row\"} items-center justify-center`}>\r\n            <div className='flex flex-col content-center justify-center'>\r\n                <div className={`rounded shadow-cyan-500/50 ${isActive ? \"shadow-xl animate-bounce\" : \"shadow-sm\"}`}>\r\n                    <div className={color}>\r\n                        <UserIcon color={color} />\r\n                    </div>\r\n                </div>\r\n                {name}\r\n            </div>\r\n            <div className={`flex content-center justify-center mx-4 flex-row flex-wrap gap-1`}>\r\n                {Array.from({ length: props.user2.retirePlayer }, (_, index) => index).map((_, index) => {\r\n                    return (<div\r\n                        key={`retirePlayer2-circle-${index}`}\r\n                        className={` rounded-full cursor-pointer ` + props.user2.color}\r\n                        style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                            transform: \"translate(-50%, -50%)\"\r\n                        }}\r\n                    ></div>)\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const UserIcon = (props) => {\r\n    return (<svg className=\"w-16 h-16 text-gray-800 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n        <path fillRule=\"evenodd\" d=\"M12 4a4 4 0 1 0 0 8 4 4 0 0 0 0-8Zm-2 9a4 4 0 0 0-4 4v1a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-1a4 4 0 0 0-4-4h-4Z\" clipRule=\"evenodd\" />\r\n    </svg>)\r\n}\r\n","export const pattern = [\r\n  [1 * 100, 0],\r\n  [(4 / 6) * 100, 0],\r\n  [(2 / 6) * 100, 0],\r\n  [(2 / 6) * 100, 1],\r\n  [(2 / 6) * 100, 0],\r\n  [(4 / 6) * 100, 0],\r\n  [1 * 100, 0],\r\n]\r\n\r\nexport const initialState = [\r\n    { row: 0, col: 0, player: 0, isSelectedForMove: false, index: 0, isRemovable: false, isMovable: false },\r\n    { row: 0, col: 3, player: 0, isSelectedForMove: false, index: 1, isRemovable: false, isMovable: false },\r\n    { row: 0, col: 6, player: 0, isSelectedForMove: false, index: 2, isRemovable: false, isMovable: false },\r\n    { row: 1, col: 1, player: 0, isSelectedForMove: false, index: 3, isRemovable: false, isMovable: false },\r\n    { row: 1, col: 3, player: 0, isSelectedForMove: false, index: 4, isRemovable: false, isMovable: false },\r\n    { row: 1, col: 5, player: 0, isSelectedForMove: false, index: 5, isRemovable: false, isMovable: false },\r\n    { row: 2, col: 2, player: 0, isSelectedForMove: false, index: 6, isRemovable: false, isMovable: false },\r\n    { row: 2, col: 3, player: 0, isSelectedForMove: false, index: 7, isRemovable: false, isMovable: false },\r\n    { row: 2, col: 4, player: 0, isSelectedForMove: false, index: 8, isRemovable: false, isMovable: false },\r\n    { row: 3, col: 0, player: 0, isSelectedForMove: false, index: 9, isRemovable: false, isMovable: false },\r\n    { row: 3, col: 1, player: 0, isSelectedForMove: false, index: 10, isRemovable: false, isMovable: false },\r\n    { row: 3, col: 2, player: 0, isSelectedForMove: false, index: 11, isRemovable: false, isMovable: false },\r\n    { row: 3, col: 4, player: 0, isSelectedForMove: false, index: 12, isRemovable: false, isMovable: false },\r\n    { row: 3, col: 5, player: 0, isSelectedForMove: false, index: 13, isRemovable: false, isMovable: false },\r\n    { row: 3, col: 6, player: 0, isSelectedForMove: false, index: 14, isRemovable: false, isMovable: false },\r\n    { row: 4, col: 2, player: 0, isSelectedForMove: false, index: 15, isRemovable: false, isMovable: false },\r\n    { row: 4, col: 3, player: 0, isSelectedForMove: false, index: 16, isRemovable: false, isMovable: false },\r\n    { row: 4, col: 4, player: 0, isSelectedForMove: false, index: 17, isRemovable: false, isMovable: false },\r\n    { row: 5, col: 1, player: 0, isSelectedForMove: false, index: 18, isRemovable: false, isMovable: false },\r\n    { row: 5, col: 3, player: 0, isSelectedForMove: false, index: 19, isRemovable: false, isMovable: false },\r\n    { row: 5, col: 5, player: 0, isSelectedForMove: false, index: 20, isRemovable: false, isMovable: false },\r\n    { row: 6, col: 0, player: 0, isSelectedForMove: false, index: 21, isRemovable: false, isMovable: false },\r\n    { row: 6, col: 3, player: 0, isSelectedForMove: false, index: 22, isRemovable: false, isMovable: false },\r\n    { row: 6, col: 6, player: 0, isSelectedForMove: false, index: 23, isRemovable: false, isMovable: false },\r\n  ];\r\n  \r\n\r\nexport const initialPlayerPositions = [\r\n  // First 9 players (left side, with left set to -20%)\r\n  { top: '10%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '18.67%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '27.34%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '36.01%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '44.68%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '53.35%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '62.02%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '70.69%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '79.36%', left: '-10%', index: 0, isBind: false, isRemoved: false },\r\n\r\n  // Next 9 players (right side, with left set to 120%)\r\n  { top: '10%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '18.67%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '27.34%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '36.01%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '44.68%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '53.35%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '62.02%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '70.69%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n  { top: '79.36%', left: '110%', index: 0, isBind: false, isRemoved: false },\r\n]\r\n\r\n//0-row, 1-col, 2-player-decide, 3-track-for-player-to-move-when-select-points, 4-index, 5-highlite-for-player-remove\r\n\r\nexport const edges = [\r\n  [1, 9],\r\n  [0, 2, 4],\r\n  [1, 14],\r\n  [4, 10],\r\n  [1, 3, 5, 7],\r\n  [4, 13],\r\n  [7, 11],\r\n  [4, 6, 8],\r\n  [7, 12],\r\n  [0, 10, 21],\r\n  [3, 9, 11, 18],\r\n  [6, 10, 15],\r\n  [8, 13, 17],\r\n  [5, 12, 14, 20],\r\n  [2, 13, 23],\r\n  [11, 16],\r\n  [15, 17, 19],\r\n  [12, 16],\r\n  [10, 19],\r\n  [16, 18, 20, 22],\r\n  [13, 19],\r\n  [9, 22],\r\n  [19, 21, 23],\r\n  [14, 22],\r\n]"],"names":["_ref","players","setPlayers","playerState","setPlayerState","useState","initialState","playerPositions","setPlayerPositions","initialPlayerPositions","gamePhase","setGamePhase","isAdvantage","setIsAdvantage","lastMove","setLastMove","isPlayerTouchedForMove","setIsPlayerTouchedForMove","useEffect","placedPlayer","retirePlayer","populatePosiblePlayerRemove","setSecondPlayerTurn","console","log","clearPosibleMoves","old","map","p","isMovable","isSelectedForMove","isRevert","activePlayer","isActive","o","isRemovable","tripletPlayers","triplets","row","rowElements","filter","c","i","length","player","push","col","colElements","findAllTriplets","playersToRemove","child","includes","structuredClone","forEach","index","handlePlayerClick","data","counter","isRemoved","removeSpecificPlayer","nextToInsert","isBind","top","concat","left","handlePlayerChange","playerIndexToMove","findIndex","prevState","newState","populatePosibleMoves","points_to_highlight","edges","checkPlayerAdvantage","_jsxs","className","children","pattern","conf","rowIndex","getHorizontalRow","configuration","margin","_jsx","style","width","marginLeft","getVerticalRow","height","marginTop","color","transform","zIndex","onClick","circle","parseFloat","Player","user1","user2","possition","props","name","UserIcon","Array","from","_","xmlns","fill","viewBox","fillRule","d","clipRule"],"sourceRoot":""}